
---
swagger: "2.0"
info:
  description: "This is a test"
  version: "1.0.5"
  title: "API Documentation"
  contact:
    email: "support@shift72.com"
host: "staging-store.shift72.com"
basePath: "/"
tags:
- name: "User"
  description: "The user service is responsible for managing user registrations."
  externalDocs:
    description: "API Documentation"
    url: "staging-store.shift72.com"
schemes:
- "https"
- "http"
paths:
 /services/users/auth/sign_in:
    post:
      tags:
      - "User"
      summary: "Creates list of users with given input array"
      description: ""
      operationId: "SignIn"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "List of user object"
        required: true
        schema:
          $ref: "#/definitions/TEST"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Signin200"
        422:
          description: "Failure"
          schema:
            $ref: "#/definitions/Signin422"
            
 /services/users/v1/api_key:
    get:
      tags:
      - "User"
      summary: "Get the currently active System API Key"
      description: "Use this API to get the currently active System API Key. This API is only accessible to users who have the admin role."
      operationId: "GetAPIKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
      security:
      - X-Auth-Admin: []
    post:
      tags:
      - "User"
      summary: "Request a new System API Key"
      description: "Use this API to get a new System API Key. This deactivates the previously used System API Key. This API is only accessible to users who have the admin role."
      operationId: "APIKeyUpdate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
      security:
      - X-Auth-Admin: []

 /services/users/auth/bouncer:
    get:
      tags:
      - "User"
      summary: "Check if the signed in user has admin permissions"
      description: "Use this API if you want to check if the signed in user has the admin role. This is often used after the Sign In API call when accessing an admin area. The benefit of this is that if the user is not an administrator, bouncer will sign the user out and you can display an appropriate message about the user not being an administrator. Otherwise API calls that require admin access will return an HTTP response code of 401, Unauthorized, which is the same response as if the session has expired."
      operationID: "APIKeyUpdate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
      security:
      - X-Auth-Admin: []
            
            
        
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
  X-Auth-Admin:
    type: "apiKey"
    name: "x-auth-token"
    in: "header"
    description: "Admin Authorization, Use the Users/auth/signin endpoint to generate this key."
  auth:
    type: "oauth2"
    authorizationUrl: "https://staging-store.shift72.com/io/authorize"
    flow: "implicit"
    scopes:
      read:TEST: "read data"
      write:TEST: "write data"
      
      
 
        
definitions:
  ApiResponse:
    type: "object"
    properties:
      auth_token:
        type: "string"
      account:
        type: "string"
      message:
        type: "string"
  Signin200:
    type: "object"
    properties:
      auth_token:
        type: "string"
        example: "ea34011c0c0e434bf7fb8365cd9185ba"
      account:
        $ref: "#/definitions/Account"
  Account:
    type: "object"
    properties:
      user_id:
        type: "string"
        example: "947"
      email:
        type: "string"
        example: "user@example.com"
      name:
        type: "string"
        example: "Joe"        
      dob:
        type: "string"
        example: "2000-01-31"       
      gender:
        type: "string"
        example: "male"
      users:
        type: "array"
        xml:
          wrapped: true
        items:
          xml:
            name: "user_array"
        $ref: "#/definitions/User_Array"
      bypass_cache: 
        type: "string"
        example: "false"
  User_Array:
    type: "object"
    properties:
      user_id:
        type: "string"
        example: "947"
      email:
        type: "string"
        example: "user@example.com"
      name:
        type: "string"
        example: "Joe"    
      avatar_url:
        type: "string"
        example: "null"   
      access_code:
        type: "string"
        example: "null"   
      account_admin:
        type: "string"
        example: "true"           
      dob:
        type: "string"
        example: "2000-01-31"       
      gender:
        type: "string"
        example: "male"        
        
     
        
        
        
       
  Signin422:
    type: "object"
    properties:
      error:
        type: "string"
        example: "Try again, your email or password is incorrect"
       
        
      
  TEST:
    properties:
      user:
        $ref: "#/definitions/User"
      
  User:
    type: "object"
    properties:
      email:
        type: "string"
        example: "user@example.com"
      password:
        type: "string"
        example: "passw0rd"
      remember_me:
        type: "string"
        example: "false"
        
        
     
